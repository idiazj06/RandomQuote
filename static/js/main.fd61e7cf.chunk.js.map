{"version":3,"sources":["Components/Quotes.jsx","Containers/QuoteContainer.jsx","index.js"],"names":["Quotes","colors","useState","setQuotesData","quoteToShow","setQuoteToShow","colorToShow","setColorToShow","random","randomColor","useEffect","fetchQuotes","selectColors","axios","get","then","response","data","quotes","Math","floor","length","catch","error","console","log","message","Contenedor","styled","div","Quote","ContainerButtons","QuoteBody","SpanQuote","span","ContRedes","InpNewQuote","input","EnlacesRedes","a","id","quote","author","className","href","target","type","value","onClick","QuoteContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA8HeA,EAzHA,WAEX,IACIC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvI,EAAoCC,mBAAS,IAA7C,mBAAmBC,GAAnB,WACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAsCH,mBAAS,IAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KAEIC,EAAS,GACTC,EAAc,GAGlBC,qBAAU,WACNC,IACAC,MACD,IAGH,IAAMD,EAAc,WAChBE,IAAMC,IAjBO,0IAkBRC,MAAK,SAAAC,GACF,IAAMC,EAAOD,EAASC,KAAKC,OAC3BV,EAASW,KAAKC,MAAMD,KAAKX,SAAWS,EAAKI,QACzClB,EAAcc,GACdZ,EAAeY,EAAKT,OACrBc,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,aAIxBd,EAAe,WACjBH,EAAcU,KAAKC,MAAMD,KAAKX,SAAWP,EAAOoB,QAEhDd,EAAeN,EAAOQ,KASpBkB,EAAaC,IAAOC,IAAV,yNACCvB,GASXwB,EAAQF,IAAOC,IAAV,0HAICvB,GAGNyB,EAAmBH,IAAOC,IAAV,4HAMhBG,EAAYJ,IAAOC,IAAV,oFAKTI,EAAYL,IAAOM,KAAV,6GAMTC,EAAYP,IAAOC,IAAV,yDAKTO,EAAcR,IAAOS,MAAV,0JACA/B,GAOXgC,EAAeV,IAAOW,EAAV,mDACNjC,GAGZ,OACI,cAACqB,EAAD,CAAYa,GAAG,YAAf,SACI,eAACV,EAAD,WACI,eAACE,EAAD,WACI,qBAAIQ,GAAG,OAAP,UAAc,cAAC,IAAD,IAAd,IAA+BpC,EAAYqC,SAC3C,eAACR,EAAD,CAAWO,GAAG,SAAd,cAAyBpC,EAAYsC,aAIzC,eAACX,EAAD,WACI,eAACI,EAAD,CAAWQ,UAAU,QAArB,UACI,cAACL,EAAD,CAAcM,KAAK,2BAA2BC,OAAO,SAASL,GAAG,cAAjE,SACI,cAAC,IAAD,MAEJ,cAACF,EAAD,CAAcM,KAAK,GAAnB,SACI,cAAC,IAAD,SAIR,cAACR,EAAD,CAAaI,GAAG,YAAYM,KAAK,SAASC,MAAM,YAAYC,QA5ExD,WAChBrC,IACAC,gBChCOqC,EARQ,WACnB,OACI,8BACI,cAAC,EAAD,OCFZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fd61e7cf.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport { FaQuoteLeft, FaTwitterSquare, FaTumblrSquare } from 'react-icons/fa';\r\n\r\nconst Quotes = () => {\r\n\r\n    const base_url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\r\n    let colors = ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', '#472E32', '#BDBB99', '#77B1A9', '#73A857'];\r\n    const [quotesData, setQuotesData] = useState([])\r\n    const [quoteToShow, setQuoteToShow] = useState('')\r\n    const [colorToShow, setColorToShow] = useState('')\r\n\r\n    let random = ''\r\n    let randomColor = ''\r\n\r\n\r\n    useEffect(() => {\r\n        fetchQuotes()\r\n        selectColors()\r\n    }, [])\r\n\r\n\r\n    const fetchQuotes = () => {\r\n        axios.get(base_url)\r\n            .then(response => {\r\n                const data = response.data.quotes\r\n                random = Math.floor(Math.random() * data.length)\r\n                setQuotesData(data)\r\n                setQuoteToShow(data[random])\r\n            }).catch(error => {\r\n                console.log(error.message)\r\n            })\r\n    }\r\n\r\n    const selectColors = () => {\r\n        randomColor = Math.floor(Math.random() * colors.length)\r\n\r\n        setColorToShow(colors[randomColor])\r\n    }\r\n\r\n    const handleClick = () => {\r\n        fetchQuotes()\r\n        selectColors()\r\n    }\r\n\r\n\r\n    const Contenedor = styled.div`\r\n        background:${colorToShow};\r\n        width:100%;\r\n        height:100vh;\r\n        display:flex;\r\n        flex-direction:column;\r\n        justify-content:center;\r\n        align-items:center;\r\n    `;\r\n\r\n    const Quote = styled.div`\r\n        background:#FFFFFA;\r\n        width:60%;\r\n        padding:50px;\r\n        color:${colorToShow}\r\n    `;\r\n\r\n    const ContainerButtons = styled.div`\r\n        display:flex;\r\n        justify-content:space-between;\r\n        align-items:center;\r\n    `;\r\n\r\n    const QuoteBody = styled.div`\r\n        padding:40px;\r\n        text-align:justify;\r\n    `;\r\n\r\n    const SpanQuote = styled.span`\r\n        margin-top:20px;\r\n        display:block;\r\n        text-align:right;\r\n    `;\r\n\r\n    const ContRedes = styled.div`\r\n        font-size:40px;\r\n    `;\r\n\r\n\r\n    const InpNewQuote = styled.input`\r\n        background:${colorToShow};\r\n        border:none;\r\n        padding:15px;\r\n        color:#FFFFFA;\r\n        border-radius:10px;\r\n    `;\r\n\r\n    const EnlacesRedes = styled.a`\r\n        color:${colorToShow};\r\n    `;\r\n\r\n    return (\r\n        <Contenedor id=\"quote-box\">\r\n            <Quote>\r\n                <QuoteBody >\r\n                    <h1 id=\"text\"><FaQuoteLeft /> {quoteToShow.quote}</h1>\r\n                    <SpanQuote id=\"author\">-{quoteToShow.author}</SpanQuote>\r\n                </QuoteBody>\r\n\r\n\r\n                <ContainerButtons>\r\n                    <ContRedes className=\"redes\">\r\n                        <EnlacesRedes href=\"twitter.com/intent/tweet\" target=\"_blank\" id=\"tweet-quote\">\r\n                            <FaTwitterSquare />\r\n                        </EnlacesRedes>\r\n                        <EnlacesRedes href=\"\">\r\n                            <FaTumblrSquare />\r\n                        </EnlacesRedes>\r\n                    </ContRedes>\r\n\r\n                    <InpNewQuote id=\"new-quote\" type=\"button\" value=\"New Quote\" onClick={handleClick} />\r\n                </ContainerButtons>\r\n            </Quote>\r\n\r\n\r\n        </Contenedor>\r\n    )\r\n}\r\n\r\nexport default Quotes\r\n","import React from 'react'\r\nimport Quotes from '../Components/Quotes'\r\n\r\nconst QuoteContainer = () => {\r\n    return (\r\n        <div>\r\n            <Quotes/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteContainer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport QuoteContainer from './Containers/QuoteContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <QuoteContainer/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}